void UnInstallFace(char &s[][30], char &name[], char cmd)
{
	char i;

	if (!cmd)
	{
		if (s[3][0])
		{
			for (i = 0; i < 3; i++)
			{
				strcpy(s[i], s[i + 1]);
			}
			memset(s[3], 0, 30);
		}
	}
	for (i = 0; i < 4; i++)
	{
		if (!s[i][0]) break;
	}
	if (cmd)
	{
		strcat(s[i - 1], name);
	}
	else
	{
		strcpy(s[i], name);
	}
	Block(2, 16, 158, 78, 0);
	Rectangle(3, 17, 157, 22, 1);
	Block(5, 19, 155 * in.p / in.size, 20, 1);//进度
	Rectangle(3, 24, 157, 77, 1);
	for (i = 0;i < 4 && s[i][0]; i++)
	{
		TextOut(5, i * 13 + 26, s[i], 1);
	}
	Refresh();
}

int ListDelete(char &dir[], struct UEXT &ue, char &str[], char &s[][30], char &size, char &fail)//删除目录 0:完成 1:失败
{
	char fp;
	char i, flag;
	char name[NAME_MAX];

	sprintf(str, "进入目录: %s", dir);
	UnInstallFace(s, str, 0);
	if (!ChDir(dir) || !(fp = fopen("", "r")))
	{
		if (fp) fclose(fp);
		UnInstallFace(s, " 失败", 1);
		return(1);
	}
	UnInstallFace(s, " 完成", 1);
	fseek(fp, 16, 0);
	while (!feof(fp))
	{
		fseek(fp, 2, 1);
		memset(name, 0, NAME_MAX);
		fread(name, 1, 14, fp);
		if (!name[0] || name[0] == 255) break;//目录已完
		for (i = flag = 0; i < ue.size; i++)//判断是否符合后缀名
		{
			if (ChkExt(name, ue.name[i]))
			{
				flag = 1;
				break;
			}
		}
		if (ChDir(name))//是目录
		{
			ChDir("..");
			if (!ListDelete(name, ue, str, s, &size, &fail))
			{
				UnInstallFace(s, "进入目录: ..", 0);
				if (!ChDir(".."))
				{
					UnInstallFace(s, " 失败", 1);
				}
				else
				{
					UnInstallFace(s, " 完成", 1);
					DeleteFile(name);
				}
			}
		}
		else
		{
			if (flag || !ue.size)//可以删除的文件
			{
				size++;
				sprintf(str, "删除: %s", name);
				UnInstallFace(s, str, 0);
				if (!DeleteFile(name))
				{
					UnInstallFace(s, " 失败", 1);
					fail++;
				}
				else
				{
					UnInstallFace(s, " 完成", 1);
				}
			}
		}
	}
	fclose(fp);
}

int ProgDelete(char &str[], char &s[][30], char &size, char &fail)//删除主程序 0:失败 1:完成
{
	char fp, tp;
	char i, flag;
	char name[NAME_MAX];

	sprintf(str, "进入目录: %s", cfset.lav);
	UnInstallFace(s, str, 0);
	if (!ChDir(cfset.lav) || !(fp = fopen("", "r")))
	{
		if (fp) fclose(fp);
		UnInstallFace(s, " 失败", 1);
		return(0);
	}
	UnInstallFace(s, " 完成", 1);
	fseek(fp, 16, 0);
	size++;
	while (!feof(fp))
	{
		fseek(fp, 2, 1);
		memset(name, 0, NAME_MAX);
		fread(name, 1, 14, fp);
		if (!name[0] || name[0] == 255) break;//目录已完
		if (ChkExt(name, "lav"))
		{
			if (tp = fopen(name, "r"))
			{
				if (fseek(tp, 0, 2) > 100000)
				{
					fseek(tp, -5, 2);
					if (getc(tp) == 0x3b)
					{
						fseek(tp, -2, 2);
						if (getc(tp) == 0x01)
						{
							fclose(tp);//正确
							sprintf(str, "删除: %s", name);
							UnInstallFace(s, str, 0);
							if (!DeleteFile(name))
							{
								UnInstallFace(s, " 失败", 1);
								fail++;
								return(0);
							}
							else
							{
								UnInstallFace(s, " 完成", 1);
								return(1);
							}
						}
					}
				}
				fclose(tp);
			}
		}
	}
	fclose(fp);
	UnInstallFace(s, "无法确认主程序,请手动删除", 0);
	fail++;
}
void UnInstall(struct UEXT &ue)//借用了out.p, in.p, in.size
{
	char size, fail;
	char str[30];
	char s[4][30];

	memset(s, 0, 120);
	in.size = 5;
	in.p = size = fail = 0;
	//if (datfp)fclose(datfp);//关闭资源文件
	fclose(128);
	fclose(129);
	fclose(130);//关闭所有文件
	Dwin("卸载");

	in.p++;
	ue.size = 0;
	strcpy(ue.name[ue.size++], "dat");
	strcpy(ue.name[ue.size++], "fun");
	strcpy(ue.name[ue.size++], "ref");
	strcpy(ue.name[ue.size++], "tmp");
	ListDelete(cpldata, ue, str, s, &size, &fail);
	DeleteFile(cpldata);

	in.p++;
	ue.size = 0;
	strcpy(ue.name[ue.size++], "y");
	strcpy(ue.name[ue.size++], "dll");
	ListDelete(libdata, ue, str, s, &size, &fail);
	DeleteFile(libdata);

	in.p++;
	ue.size = 0;
	strcpy(ue.name[ue.size++], "h");
	ListDelete(fundata, ue, str, s, &size, &fail);
	DeleteFile(fundata);

	in.p++;
	ProgDelete(str, s, &size, &fail);//删除主程序

	in.p++;
	UnInstallFace(s, "卸载完成！", 0);
	sprintf(str, "删除: %d 失败: %d", size - fail, fail);
	UnInstallFace(s, str, 0);
	UnInstallFace(s, "按任意键退出程序...", 0);
	getchar();
	exit(0);
}