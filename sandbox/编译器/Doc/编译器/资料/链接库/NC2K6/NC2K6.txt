struct FLM_BUF
{
 char flag;
 char pic[1600];
};

#begin 0x8984
int in_add;
#end

#begin 0x88
int disksize;
#end

char codebuf[500];//大小可以改变

void exeasm(int code)
{
 in_add = code;
 #code{0x9a};
 in_add = 0x8b79;
}
void call(int add)
{
 char code;
 int address;
 char code1;

 code = 0;
 address = add;
 code1 = 0x60;
 exeasm(&code);
}
void DiskReclaim()
{
 call(0x051b);
 call(0x051c);
}
long DiskCheck()
{
 #loaddata codebuf=
 {0xA9,0x01,0x18,0x6D,0x7B,0x08,0xC9,0x05,0x90,0x03,0x38,0xE9,0x05,0xAA,0xBD,0x7C,0x08,0x8D,0x12,0x0A,0x8A,0x0A,0xAA,0xBD,
  0x81,0x08,0x8D,0x13,0x0A,0xE8,0xBD,0x81,0x08,0x8D,0x14,0x0A,0xA9,0x00,0x8D,0x16,0x0A,0xA9,0x01,0x8D,0x17,0x0A,0xA9,0x00,
  0x85,0xDB,0xA9,0x0B,0x85,0xDC,0x00,0x08,0x05,0xA9,0x00,0x85,0x88,0x85,0x89,0x85,0x80,0xA9,0x0B,0x85,0x81,0x18,0xA5,0x80,
  0x69,0xFA,0x85,0x82,0xA5,0x81,0x69,0x00,0x85,0x83,0xA0,0x00,0xB1,0x80,0xC9,0xFF,0xF0,0x10,0xA2,0x00,0x0A,0xB0,0x06,0xE6,
  0x88,0xD0,0x02,0xE6,0x89,0xE8,0xE0,0x08,0x90,0xF2,0xE6,0x80,0xD0,0x02,0xE6,0x81,0xA5,0x81,0xC5,0x83,0xD0,0x04,0xA5,0x80,
  0xC5,0x82,0x90,0xD8,0x18,0xA5,0x88,0x69,0x30,0x85,0x88,0xD0,0x02,0xE6,0x89,0x60};
 exeasm(codebuf);
 return((2048-disksize)<<4);
}

void SetFlmMode(struct FLM_BUF &cut,char &pic[])
{
 #loaddata codebuf=
 {0xA9,0x40,0x85,0x80,0xA9,0x26,0x85,0x81,0xA9,0x00,0x85,0x82,0xA9,0x20,0x85,0x83,0xAD,0x90,0x2C,0xD0,0x1D,0xA2,0x06,0xA0,
  0x00,0xB1,0x80,0x91,0x82,0xC8,0xD0,0xF9,0xE6,0x81,0xE6,0x83,0xCA,0xD0,0xF2,0xA2,0x40,0xB1,0x80,0x91,0x82,0xC8,0xCA,0xD0,
  0xF8,0x60,0xC9,0x03,0x90,0x01,0x60,0xC9,0x01,0xD0,0x1F,0xA2,0x06,0xA0,0x00,0x98,0x91,0x82,0xC8,0xD0,0xFB,0xE6,0x83,0xCA,
  0xD0,0xF6,0xA2,0x40,0x91,0x82,0xC8,0xCA,0xD0,0xFA,0xA9,0x00,0x85,0x82,0xA9,0x20,0x85,0x83,0xA0,0x00,0xB1,0x80,0xC9,0x40,
  0xB0,0x1E,0x29,0x3F,0xD0,0x02,0xA9,0x40,0x18,0x65,0x82,0x85,0x82,0x90,0x02,0xE6,0x83,0xE6,0x80,0xD0,0x02,0xE6,0x81,0xA0,
  0x00,0xB1,0x80,0xC9,0xC1,0xD0,0xDB,0x60,0xC9,0x80,0xB0,0x28,0x29,0x3F,0xD0,0x02,0xA9,0x40,0xAA,0xA0,0x00,0x18,0xB1,0x82,
  0x69,0xFF,0x91,0x82,0xE6,0x82,0xD0,0x02,0xE6,0x83,0xCA,0xD0,0xF0,0xE6,0x80,0xD0,0x02,0xE6,0x81,0xA0,0x00,0xB1,0x80,0xC9,
  0xC1,0xD0,0xAF,0x60,0xC9,0xC0,0xB0,0x27,0x29,0x3F,0xD0,0x02,0xA9,0x40,0xAA,0xA0,0x00,0xE6,0x80,0xD0,0x02,0xE6,0x81,0x18,
  0xB1,0x80,0x71,0x82,0x91,0x82,0xE6,0x80,0xD0,0x02,0xE6,0x81,0xE6,0x82,0xD0,0x02,0xE6,0x83,0xCA,0xD0,0xEA,0xF0,0xCC,0x29,
  0x3F,0xD0,0x02,0xA9,0x40,0xAA,0xE6,0x80,0xD0,0x02,0xE6,0x81,0xA0,0x00,0xB1,0x80,0x85,0x84,0x18,0xB1,0x82,0x65,0x84,0x91,
  0x82,0xE6,0x82,0xD0,0x02,0xE6,0x83,0xCA,0xD0,0xF0,0xE6,0x80,0xD0,0x02,0xE6,0x81,0xA9,0x00,0xF0,0x9F};
 codebuf[1]=cut.pic;codebuf[5]=cut.pic>>8;
 codebuf[9]=codebuf[83]=pic;codebuf[13]=codebuf[87]=pic>>8;
 codebuf[17]=&cut.flag;codebuf[18]=(&cut.flag)>>8;
}
void FlmDecode()
{in_add=&codebuf[0];
 #code{0x9a};
 in_add=0x8b79;
}
void main()
{
}
